using System.Text;
using System.Threading.Tasks;
using NetForge.Interfaces.Cli;
using NetForge.Simulation.Common;
using NetForge.Simulation.Common.CLI.Base;
using NetForge.Simulation.Common.Common;

namespace NetForge.Simulation.CliHandlers.Alcatel.Basic
{
    /// <summary>
    /// Alcatel admin command handler
    /// </summary>
    public class AdminCommandHandler() : VendorAgnosticCliHandler("admin", "Administrative commands")
    {
        protected override async Task<CliResult> ExecuteCommandAsync(ICliContext context)
        {
            if (!IsVendor(context, "Alcatel"))
            {
                return RequireVendor(context, "Alcatel");
            }

            if (context.CommandParts.Length < 2)
            {
                return Error(CliErrorType.IncompleteCommand,
                    "% Incomplete command - need admin option");
            }

            var adminOption = context.CommandParts[1];

            return adminOption switch
            {
                "display-config" => HandleAdminDisplayConfig(context),
                _ => Error(CliErrorType.InvalidCommand,
                    $"% Invalid admin option: {adminOption}")
            };
        }

        private CliResult HandleAdminDisplayConfig(ICliContext context)
        {
            var device = context.Device as INetworkDevice;
            var output = new StringBuilder();

            output.AppendLine("! Configuration file generated by Alcatel-Lucent");
            output.AppendLine("! Current configuration:");
            output.AppendLine("!");
            output.AppendLine($"system name {device?.Name}");
            output.AppendLine("!");
            output.AppendLine("interface vlan 1");
            output.AppendLine("  no shutdown");
            output.AppendLine("!");
            output.AppendLine("end");

            return Success(output.ToString());
        }
    }
}
